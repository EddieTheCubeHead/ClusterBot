# From: https://faun.dev/c/stories/thaotruongrakuten/full-cicd-with-docker-github-actions-digitalocean-droplets-container-registry/

on:
  push:
    branches: [ master ]

  workflow_dispatch:
    inputs:
      version:
        description: 'Docker image version'
        required: true

env:
  REGISTRY_URL: "registry.digitalocean.com/cluster-bot-registry"
  IMAGE_NAME: "clusterbot"

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build container
        run: docker build -t $(echo $REGISTRY_URL)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) .

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITAL_OCEAN_API_KEY }}

      - name: Log in to container registry
        run: doctl registry login --expiry-seconds 600

      - name: Remove old images
        run: if [ ! -z "$(doctl registry repository list | grep "$(echo $IMAGE_NAME)")" ]; then doctl registry repository delete-manifest $(echo $IMAGE_NAME) $(doctl registry repository list-tags $(echo $IMAGE_NAME) | grep -o "sha.*") --force; else echo "No repository"; fi

      - name: Push image to registry
        run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
      - name: Deploy to droplet
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.HOST_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY_PRIVATE }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          envs: IMAGE_NAME,REGISTRY,{{ secrets.DIGITAL_OCEAN_API_KEY }},GITHUB_SHA
          script:
            docker login -u ${{ secrets.DIGITAL_OCEAN_API_KEY }} -p ${{ secrets.DIGITAL_OCEAN_API_KEY }} \
            registry.digitalocean.com
            docker stop $(echo $IMAGE_NAME)
            docker rm $(echo $IMAGE_NAME)
            docker run -d --restart always --name $(echo $IMAGE_NAME) --build-arg BOT_TOKEN=${{ secrets.TOKEN }} \
            $(echo REGISTRY_URL)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)
